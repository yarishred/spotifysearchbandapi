{"version":3,"sources":["components/SeachSpotify/SearchSpotifyArtists.js","components/SpotifyBandItem/SpotifyBandItem.js","components/SpotifyArtists/GridSpotifyArtists.js","helpers/SpotifyCredentials.js","SpotifyApp.js","index.js"],"names":["SearchSpotifyArtists","setArtistas","useState","value","setValue","className","onSubmit","e","preventDefault","trim","length","artist","type","onChange","target","placeholder","SpotifyBandItem","images","band","myimages","image","console","log","map","img","index","src","url","alt","name","GridSpotifyArtists","artista","imagenes","setImagenes","spotifyCredentials","client_id","client_secret","useEffect","axios","method","headers","Authorization","btoa","data","then","token","encodeURI","access_token","artists","items","dataArtist","id","artistsData","SpotifyApp","artistas","ReactDOM","render","document","getElementById"],"mappings":"4PAIaA,G,MAAuB,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAAiB,EAC3BC,mBAAS,IADkB,mBAC9CC,EAD8C,KACvCC,EADuC,KAkBrD,OACE,sBAAKC,UAAU,eAAf,UACE,kDACA,sBAAMC,SAdW,SAACC,GACpBA,EAAEC,iBAECL,EAAMM,OAAOC,OAAS,GACzBT,GAAa,SAAAU,GAAM,4BAAQA,GAAR,CAAgBR,OACnCC,EAAS,KASP,SACE,uBACEQ,KAAK,OACLT,MAAOA,EACPU,SAtBgB,SAACN,GACvBH,EAASG,EAAEO,OAAOX,QAsBZY,YAAY,6B,wBC1BTC,G,MAAkB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KAClCC,EAAWF,EAAOG,MAGxB,OAFAC,QAAQC,IAAIH,GAGV,sBAAKd,UAAU,OAAf,UACE,6BAAKa,IACJC,EAASI,KAAI,SAACC,EAAKC,GAElB,OAAiB,IAAVA,EAAc,qBAAKC,IAAKF,EAAIG,IAAKC,IAAKJ,EAAIK,OAAU,aCJtDC,G,MAAqB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACjB7B,mBAAS,IADQ,mBAC1C8B,EAD0C,KAChCC,EADgC,KAG3CC,ECXC,CACLC,UAAW,mCACXC,cAAe,oCDWTD,EAA6BD,EAA7BC,UAAWC,EAAkBF,EAAlBE,cAgDnB,OA9CAC,qBAAU,WAENC,IAAM,yCAA0C,CAC9CC,OAAQ,OACRC,QAAS,CACP,eAAgB,oCAChBC,cAAc,SAAD,OAAWC,KAAKP,EAAY,IAAMC,KAEjDO,KAAM,kCAELC,MAAK,YACJ,OADkB,EAAXD,QAGRC,MAAK,SAACC,GACLP,IAAM,2CAAD,OACwCQ,UACzCf,GAFC,kCAIH,CACEQ,OAAQ,MACRC,QAAS,CAAEC,cAAc,UAAD,OAAYI,EAAME,iBAG3CH,MAAK,YACJ,OADkB,EAAXD,KACKK,QAAQC,SAErBL,MAAK,SAACM,GAUL,OATgBA,EAAW3B,KAAI,SAACZ,GAC9B,MAAO,CACLwC,GAAIxC,EAAOwC,GACXjC,KAAMP,EAAOkB,KACbZ,OAAQ,CACNG,MAAOT,EAAOM,eAMrB2B,MAAK,SAACQ,GACLnB,EAAYmB,WAKrB,CAACrB,EAASI,EAAWC,IAGtB,qCACE,qBAAI/B,UAAU,cAAd,uCAAuD0B,KACvD,qBAAK1B,UAAU,oBAAf,SACG2B,EAAST,KAAI,SAACC,GACb,OAAO,cAAC,EAAD,eAAkCA,GAAZA,EAAI2B,cE7D9BE,EAAa,WAAO,IAAD,EACEnD,mBAAS,IADX,mBACvBoD,EADuB,KACbrD,EADa,KAK9B,OACE,sBAAKI,UAAU,cAAf,UACE,mDAEA,cAAC,EAAD,CAAsBJ,YAAaA,IACnC,uBACA,uBACA,8BACGqD,EAAS/B,KAAI,SAACQ,GACb,OAAO,cAAC,EAAD,CAAmCA,QAASA,GAAlBA,YCf3CwB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,U","file":"static/js/main.c06502d3.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport './SearchSpotifyArtists.css'\r\n\r\nexport const SearchSpotifyArtists = ({setArtistas}) => {\r\n  const [value, setValue] = useState('');\r\n\r\n  const setValueHandler = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  \r\n    if(value.trim().length > 2)\r\n    setArtistas( artist => [...artist, value])\r\n    setValue('')\r\n  };\r\n\r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"spotify-form\" >\r\n      <h2>Search Something</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={setValueHandler}\r\n          placeholder=\"Search any Artist\"\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport './SpotifyBandItem.css'\r\n\r\nexport const SpotifyBandItem = ({ images, band }) => {\r\n  const myimages = images.image;\r\n  console.log(myimages);\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <h1>{band}</h1>\r\n      {myimages.map((img, index) => {\r\n        \r\n        return index === 1 ? <img src={img.url} alt={img.name}/> : null;\r\n        }\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { SpotifyCredentials } from \"../../helpers/SpotifyCredentials\";\r\nimport { SpotifyBandItem } from \"../SpotifyBandItem/SpotifyBandItem\";\r\n\r\n\r\n// CSS\r\nimport './GridSpotifyArtists.css'\r\n\r\nexport const GridSpotifyArtists = ({ artista }) => {\r\n  const [imagenes, setImagenes] = useState([]);\r\n  //Crear el token de spotify\r\n  const spotifyCredentials = SpotifyCredentials();\r\n\r\n  const { client_id, client_secret } = spotifyCredentials;\r\n\r\n  useEffect(() => {\r\n    const getArtists = () => {\r\n      axios(\"https://accounts.spotify.com/api/token\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n          Authorization: `Basic ${btoa(client_id + \":\" + client_secret)}`,\r\n        },\r\n        data: \"grant_type=client_credentials\",\r\n      })\r\n        .then(({ data }) => {\r\n          return data;\r\n        })\r\n        .then((token) => {\r\n          axios(\r\n            `https://api.spotify.com/v1/search?query=${encodeURI(\r\n              artista\r\n            )}&type=artist&offset=0&limit=10`,\r\n            {\r\n              method: \"GET\",\r\n              headers: { Authorization: `Bearer ${token.access_token}` },\r\n            }\r\n          )\r\n            .then(({ data }) => {\r\n              return data.artists.items;\r\n            })\r\n            .then((dataArtist) => {\r\n              const artists = dataArtist.map((artist) => {\r\n                return {\r\n                  id: artist.id,\r\n                  band: artist.name,\r\n                  images: {\r\n                    image: artist.images,\r\n                  },\r\n                };\r\n              });\r\n              return artists;\r\n            })\r\n            .then((artistsData) => {\r\n              setImagenes(artistsData);\r\n            });\r\n        });\r\n    };\r\n    getArtists();\r\n  }, [artista, client_id, client_secret]);\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"artist-grid\">Artists with the keyword: {artista}</h2>\r\n      <div className=\"artists-container\">\r\n        {imagenes.map((img) => {\r\n          return <SpotifyBandItem key={img.id} {...img} />;\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","export const SpotifyCredentials = () => {\r\n  return {\r\n    client_id: 'fcd512d1a95d4209876e98d9e7beffa0',\r\n    client_secret: 'c7fbb5e1edf8431a898c34f105771b27'\r\n  };\r\n};\r\n\r\n","import React, { useState } from \"react\";\r\nimport { SearchSpotifyArtists } from \"./components/SeachSpotify/SearchSpotifyArtists\";\r\nimport { GridSpotifyArtists } from \"./components/SpotifyArtists/GridSpotifyArtists\";\r\n\r\nimport './index.css';\r\n\r\nexport const SpotifyApp = () => {\r\n  const [artistas, setArtistas] = useState([]);\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"spotify-app\">\r\n      <h1>Spotify Input App</h1>\r\n\r\n      <SearchSpotifyArtists setArtistas={setArtistas} />\r\n      <br />\r\n      <br />\r\n      <div>\r\n        {artistas.map((artista) => {\r\n          return <GridSpotifyArtists  key={artista} artista={artista} />\r\n        })}\r\n      </div>\r\n      {/* <p>{spotifyToken}</p> */}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { SpotifyApp } from './SpotifyApp'\n\nReactDOM.render(\n    <SpotifyApp  />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}